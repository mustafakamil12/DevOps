from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
import logging

def setup_headless_chrome():
    """Set up and return a headless Chrome WebDriver for Chrome 135+ with suppressed DevTools logs."""
    chrome_options = Options()
    
    # Add headless options - using the newer headless mode syntax
    chrome_options.add_argument("--headless=new")
    
    # Add other necessary options for stable headless operation
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("--disable-gpu")
    
    # Suppress DevTools logging messages
    chrome_options.add_experimental_option('excludeSwitches', ['enable-logging'])
    
    # Additional option to suppress console logging
    chrome_options.add_argument("--log-level=3")  # 3 = FATAL
    
    # Optional: Add additional useful options
    chrome_options.add_argument("--window-size=1920,1080")
    chrome_options.add_argument("--disable-extensions")
    
    # Suppress selenium logging
    selenium_logger = logging.getLogger('selenium')
    selenium_logger.setLevel(logging.CRITICAL)
    
    # Create and return the driver
    # Note: Make sure your chromedriver version matches your Chrome version
    driver = webdriver.Chrome(options=chrome_options)
    return driver

def example_usage():
    """Example function demonstrating headless Chrome usage."""
    driver = setup_headless_chrome()
    try:
        # Navigate to a website
        driver.get("https://www.example.com")
        
        # Print the page title
        print(f"Page title: {driver.title}")
        
        # Find elements
        elements = driver.find_elements(By.TAG_NAME, "h1")
        for element in elements:
            print(f"Found h1: {element.text}")
        
        # Take a screenshot
        driver.save_screenshot("screenshot.png")
        print("Screenshot saved as screenshot.png")
        
        return driver.title
    finally:
        driver.quit()

if __name__ == "__main__":
    example_usage()
